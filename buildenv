FISH_VERSION="3.7.1"
export ZOPEN_STABLE_URL="https://github.com/fish-shell/fish-shell/releases/download/${FISH_VERSION}/fish-${FISH_VERSION}.tar.xz"
export ZOPEN_STABLE_DEPS="zoslib make cmake ncurses libpcre2 zlib getopt"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="shell"

export ZOPEN_COMP="CLANG"

export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build -DCMAKE_BUILD_TYPE=Release --install-prefix \"\$ZOPEN_INSTALL_DIR/\" ."

export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS="--build ../build --parallel \$ZOPEN_NUM_JOBS --config Release"
export ZOPEN_MAKE_MINIMAL=Y

export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

export ZOPEN_CHECK="skip"

export ZOPEN_SYSTEM_PREREQS="zos25"


zopen_pre_patch()
{
export CFLAGS="$CFLAGS -mzos-target=zosv2r5 -march=z13"
export CXXFLAGS="$CXXFLAGS -mzos-target=zosv2r5 -march=z13"
export CPPFLAGS="$CPPFLAGS -D_XPLATFORM_SOURCE=1 -D_POSIX_C_SOURCE=200809L -DMAP_ANONYMOUS=0 -D__GNU_LIBRARY__=1 -UZOSLIB_USE_CLIB_LOCALE"
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_append_to_zoslib_env() {
  cat <<EOF
ASCII_TERMINFO|set|PROJECT_ROOT/../../ncurses/ncurses/share/terminfo/
TERMINFO|set|PROJECT_ROOT/../../ncurses/ncurses/share/terminfo/
EOF
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "${FISH_VERSION}"
}
